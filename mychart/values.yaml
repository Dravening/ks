# Default values for mychart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: registry-edge.cosmoplat.com/kubesphere/beego-web
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.1.3"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8088

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# application-token.txt
applicationTokenTxt: |-
  test
  hello
  world

# basic-realm.properties
basicRealmProperties: |-
  #
  # Copyright 2017 StreamSets Inc.
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.
  #

  #The format is
  #  <user>: MD5:<password>[,user,<role>,<role>,...,<group:group1>,<group:group2>,....]
  #
  # Supported roles are: admin, manager, creator, guest
  #
  # 'user' must always be present
  #
  # Prefix with 'group:' for group information for the user.
  #

  # BASIC authentication, password is same as user name
  admin:   MD5:21232f297a57a5a743894a0e4a801fc3,user,admin
  guest:   MD5:084e0343a0486ff05530df6c705c8bb4,user,guest
  creator: MD5:ee2433259b0fe399b40e81d2c98a38b6,user,creator
  manager: MD5:1d0258c2440a8d19e716292b231e3190,user,manager
  user1:   MD5:24c9e15e52afc47c225b757e7bee1f9d,user,manager,creator,group:dev
  user2:   MD5:7e58d63b60197ceb55a1c487989a3720,user,manager,creator,group:dev
  user3:   MD5:92877af70a45fd6a2ed7fe81e1236b78,user,manager,creator,group:test
  user4:   MD5:3f02ebe3d7929b091e3d8ccfde2f3bc6,user,manager,creator,group:test

  #
  # To compute the MD5 run the following command:
  #
  # OSX:
  #      $ echo -n "<password>" | md5
  #
  # Linux:
  #      $ echo -n "<password>" | md5sum
  #

# credential-stores.properties
credentialStoresProperties:
